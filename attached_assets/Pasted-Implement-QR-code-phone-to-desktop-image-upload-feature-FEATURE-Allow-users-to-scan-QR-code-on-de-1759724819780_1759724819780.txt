Implement QR code phone-to-desktop image upload feature:

FEATURE: Allow users to scan QR code on desktop to upload photos from their phone.

CURRENT UPLOAD FLOW:
- Desktop only: drag/drop or click to browse files
- Problem: Users have product photos on their phone, not computer

NEW FLOW WITH QR CODE:
- User on desktop sees QR code
- Scans with phone camera
- Opens mobile upload page
- Selects photos from phone gallery
- Photos transfer to desktop session
- Desktop shows uploaded images in real-time

IMPLEMENTATION:

1. GENERATE UNIQUE SESSION ID:
```javascript
   // When upload page loads on desktop
   const sessionId = generateUniqueId(); // UUID
   const uploadUrl = `https://sellfast.now/mobile-upload/${sessionId}`;

DISPLAY QR CODE ON DESKTOP:

javascript   // Use QR code library
   npm install qrcode.react
   
   import QRCode from 'qrcode.react';
   
   <div className="qr-upload-section">
     <QRCode value={uploadUrl} size={200} />
     <p>Scan the QR code to upload images from your phone</p>
     <p>Stay on this page while uploading</p>
   </div>

CREATE MOBILE UPLOAD PAGE:
Route: /mobile-upload/:sessionId
Shows on phone:

Simple camera/gallery upload interface
"Upload Photos" button
Progress indicator
"Done" button when finished


REAL-TIME SYNC WITH WEBSOCKETS:

javascript   // Desktop listens for uploads
   socket.on(`upload-${sessionId}`, (imageData) => {
     addImageToForm(imageData);
     showToast('Photo received from phone');
   });
   
   // Phone sends uploads
   socket.emit(`upload-${sessionId}`, imageData);

ALTERNATIVE: POLLING (simpler than websockets):

javascript   // Desktop polls every 2 seconds
   setInterval(async () => {
     const images = await fetch(`/api/session/${sessionId}/images`);
     updateImageList(images);
   }, 2000);
   
   // Phone uploads to temporary storage
   POST /api/session/${sessionId}/upload

TEMPORARY IMAGE STORAGE:

Store uploaded images in session-specific folder
Session expires after 30 minutes
Images automatically cleaned up
Transfer images to Cloudinary when user submits listing


UI LAYOUT:

   ┌─────────────────────────────────────────────────────┐
   │  Upload Images (0 of 24)                            │
   ├──────────────────────────┬──────────────────────────┤
   │                          │  ┌───────────────────┐   │
   │  Drop image files here   │  │                   │   │
   │                          │  │    [QR CODE]      │   │
   │  [Add Images]            │  │                   │   │
   │                          │  └───────────────────┘   │
   │  Use classic uploader    │  Scan to upload from     │
   │                          │  your phone              │
   │                          │  Stay on this page       │
   └──────────────────────────┴──────────────────────────┘
   │  [done with images]                                 │
   └─────────────────────────────────────────────────────┘

MOBILE UPLOAD PAGE UI:

   ┌─────────────────────────────────┐
   │  Upload Photos to Desktop       │
   │                                 │
   │  [📷 Take Photo]                │
   │  [🖼️ Choose from Gallery]       │
   │                                 │
   │  Photos selected: 3             │
   │  ┌─────┐ ┌─────┐ ┌─────┐       │
   │  │ IMG │ │ IMG │ │ IMG │       │
   │  └─────┘ └─────┘ └─────┘       │
   │                                 │
   │  Uploading... 2 of 3            │
   │  [████████░░] 66%               │
   │                                 │
   │  [Upload More] [Done]           │
   └─────────────────────────────────┘

SECURITY:

Session IDs expire after 30 minutes
Rate limit uploads per session
Validate image types and sizes
Associate session with logged-in user
Clean up abandoned sessions


TECHNICAL STACK:

QR Code: qrcode.react library
Real-time: Socket.io OR simple polling
Storage: Temporary folder + Cloudinary
Mobile detection: Responsive design



LIBRARIES TO INSTALL:
bashnpm install qrcode.react socket.io socket.io-client
BENEFITS:

Users can upload phone photos without emailing/texting
Seamless desktop + mobile experience
Faster than "save to computer then upload"
Professional marketplace feature

Implement this QR code upload system and confirm when working.