Replace dual timers with sequential linear progress bars - one for uploads, one for AI processing.

CURRENT PROBLEM: 
- Clock timer (‚è±Ô∏è 0:58 remaining) + Linear progress bar showing simultaneously
- Confusing dual display

NEW REQUIREMENT:
- Phase 1: Show ONLY linear progress bar for photo uploads
- Phase 2: First bar disappears, new linear progress bar appears for AI processing
- No clock timers, only linear bars

IMPLEMENTATION:

1. REMOVE CLOCK TIMER DISPLAY:
```javascript
// DELETE these elements:
<p className="timer">‚è±Ô∏è {formatTime(timeRemaining)} remaining</p>

// KEEP ONLY:
<div className="progress-bar">
  <div className="progress-fill" style={{ width: `${percent}%` }} />
</div>

PHASE 1 - PHOTO UPLOAD LINEAR TIMER:

javascriptconst PhotoUploadProgress = ({ current, total }) => {
  const percent = Math.round((current / total) * 100);
  
  return (
    <div className="upload-progress">
      <h3>Uploading Photos</h3>
      <p>Uploading photo {current} of {total}</p>
      
      {/* Linear progress bar */}
      <div className="progress-bar">
        <div 
          className="progress-fill upload-phase"
          style={{ width: `${percent}%` }}
        >
          <span className="progress-text">{percent}%</span>
        </div>
      </div>
      
      <p className="status">{current} of {total} photos uploaded</p>
    </div>
  );
};

PHASE 2 - AI PROCESSING LINEAR TIMER:

javascriptconst AIProcessingProgress = ({ current, total }) => {
  const percent = Math.round((current / total) * 100);
  
  return (
    <div className="ai-progress">
      <h3>AI Generating Descriptions</h3>
      <p>Processing item {current} of {total}</p>
      
      {/* Linear progress bar */}
      <div className="progress-bar">
        <div 
          className="progress-fill ai-phase"
          style={{ width: `${percent}%` }}
        >
          <span className="progress-text">{percent}%</span>
        </div>
      </div>
      
      <p className="status">{current} of {total} items analyzed</p>
      
      {/* Optional: Rotating tips below */}
      <div className="tip">
        üí° Smart Pricing Psychology
        <p>Pricing at $99 instead of $100 can increase click-through...</p>
      </div>
    </div>
  );
};

SEQUENTIAL DISPLAY LOGIC:

javascriptconst ProcessingModal = ({ phase, uploadProgress, aiProgress }) => {
  return (
    <div className="processing-modal">
      {phase === 'upload' && (
        <PhotoUploadProgress 
          current={uploadProgress.current}
          total={uploadProgress.total}
        />
      )}
      
      {phase === 'ai' && (
        <AIProcessingProgress 
          current={aiProgress.current}
          total={aiProgress.total}
        />
      )}
    </div>
  );
};

PHASE TRANSITION:

javascriptconst processPhotos = async (photos) => {
  // PHASE 1: Upload
  setPhase('upload');
  
  for (let i = 0; i < photos.length; i++) {
    setUploadProgress({ current: i, total: photos.length });
    await uploadPhoto(photos[i]);
    setUploadProgress({ current: i + 1, total: photos.length });
  }
  
  // Short pause between phases (optional)
  await new Promise(resolve => setTimeout(resolve, 300));
  
  // PHASE 2: AI Generation
  setPhase('ai'); // Upload bar disappears, AI bar appears
  
  for (let i = 0; i < photos.length; i++) {
    setAIProgress({ current: i, total: photos.length });
    await generateAI(photos[i]);
    setAIProgress({ current: i + 1, total: photos.length });
  }
  
  // Complete
  setPhase('complete');
};

LINEAR PROGRESS BAR STYLING:

css.progress-bar {
  width: 100%;
  height: 30px;
  background-color: #e0e0e0;
  border-radius: 15px;
  overflow: hidden;
  position: relative;
}

.progress-fill {
  height: 100%;
  transition: width 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-weight: bold;
  font-size: 14px;
}

/* Upload phase color */
.progress-fill.upload-phase {
  background: linear-gradient(90deg, #4CAF50, #66BB6A);
}

/* AI phase color */
.progress-fill.ai-phase {
  background: linear-gradient(90deg, #2196F3, #42A5F5);
}

.progress-text {
  position: relative;
  z-index: 1;
}

VISUAL EXAMPLE - PHASE 1:

‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ  Uploading Photos                      ‚îÇ
‚îÇ  Uploading photo 6 of 10               ‚îÇ
‚îÇ                                        ‚îÇ
‚îÇ  [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë] 60%              ‚îÇ
‚îÇ                                        ‚îÇ
‚îÇ  6 of 10 photos uploaded               ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

VISUAL EXAMPLE - PHASE 2:

‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ  AI Generating Descriptions            ‚îÇ
‚îÇ  Processing item 4 of 10               ‚îÇ
‚îÇ                                        ‚îÇ
‚îÇ  [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë] 40%                ‚îÇ
‚îÇ                                        ‚îÇ
‚îÇ  4 of 10 items analyzed                ‚îÇ
‚îÇ                                        ‚îÇ
‚îÇ  üí° Smart Pricing Psychology            ‚îÇ
‚îÇ  Pricing at $99 instead of $100...     ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

STATE MANAGEMENT:

javascriptconst [processingState, setProcessingState] = useState({
  phase: null, // 'upload', 'ai', or 'complete'
  uploadProgress: { current: 0, total: 0 },
  aiProgress: { current: 0, total: 0 }
});

// Update during upload phase
setProcessingState(prev => ({
  ...prev,
  phase: 'upload',
  uploadProgress: { current: 3, total: 10 }
}));

// Switch to AI phase
setProcessingState(prev => ({
  ...prev,
  phase: 'ai',
  aiProgress: { current: 0, total: 10 }
}));

REMOVE ALL CLOCK TIMER CODE:

Delete these:

‚è±Ô∏è {timeRemaining} remaining
formatTime() function calls in progress displays
Any countdown timer logic
Circular/clock timer components

Keep only:

Linear progress bars
Percentage display (60%, 40%, etc.)
Item count (6 of 10, 4 of 10, etc.)

REQUIREMENTS CHECKLIST:

 Remove clock timer (‚è±Ô∏è) completely
 Show only one linear progress bar at a time
 Upload phase: Green linear bar
 AI phase: Blue linear bar
 Upload bar disappears when complete
 AI bar appears when AI phase starts
 Percentage shown inside bar (60%, 40%)
 Item count shown below bar
 Clean, simple, sequential display

Implement sequential linear progress bars now.
Test with 10 photos and verify:

Upload bar appears first (green)
Upload bar disappears when done
AI bar appears (blue)
No clock timers anywhere
Only one bar visible at a time